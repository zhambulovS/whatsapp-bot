import os
import requests
import sqlite3
from flask import Flask, request
from dotenv import load_dotenv
from twilio.twiml.messaging_response import MessagingResponse
from openai import OpenAI
from intent import detect_intent
from prompts import build_prompt
from utils import send_whatsapp_message

GREETING_TEXT = "–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ! Rakurs Production —Å—Ç—É–¥–∏—è—Å—ã–Ω–∞ “õ–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑ üå∏ –ë—ñ–∑ Love Story —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—è–ª–∞—Ä—ã–Ω —Å—Ç—É–¥–∏—è —ñ—à—ñ–Ω–¥–µ “±—Å—ã–Ω–∞–º—ã–∑. “ö–∞–Ω–¥–∞–π —Å“±—Ä–∞“ì—ã“£—ã–∑ –±–∞—Ä –µ–¥—ñ?"

# .env —Ñ–∞–π–ª—ã–Ω –∂“Ø–∫—Ç–µ—É
load_dotenv()

# Flask —Å–µ—Ä–≤–µ—Ä—ñ–Ω –±–∞—Å—Ç–∞—É
app = Flask(__name__)

# OpenAI –∫–ª–∏–µ–Ω—Ç—ñ
client = OpenAI(api_key=os.getenv('OPENAI_API_KEY'))

# Twilio –ø–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä—ñ
TWILIO_ACCOUNT_SID = os.getenv('TWILIO_ACCOUNT_SID')
TWILIO_AUTH_TOKEN = os.getenv('TWILIO_AUTH_TOKEN')
TWILIO_WHATSAPP_NUMBER = os.getenv('TWILIO_WHATSAPP_NUMBER')
ADMIN_WHATSAPP_NUMBER = os.getenv('ADMIN_WHATSAPP_NUMBER')
# “ö–∞—Ç–µ –±–æ–ª—Å–∞ —Ç–æ“õ—Ç–∞—Ç—É
required_vars = [client.api_key, TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN, TWILIO_WHATSAPP_NUMBER]
if not all(required_vars):
    raise Exception("‚ùå .env —ñ—à—ñ–Ω–¥–µ –±—ñ—Ä –Ω–µ–º–µ—Å–µ –±—ñ—Ä–Ω–µ—à–µ API –∫—ñ–ª—Ç –∂–µ—Ç—ñ—Å–ø–µ–π–¥—ñ!")

# SQLite –∂–∞–¥—ã –±–∞–∑–∞—Å—ã
conn = sqlite3.connect("memory.db", check_same_thread=False)
c = conn.cursor()
c.execute('''
    CREATE TABLE IF NOT EXISTS memory (
        user TEXT,
        sender TEXT,
        message TEXT
    )
''')
conn.commit()

# –ê–º–∞–Ω–¥–∞—Å—É–¥—ã —Ç–µ–∫—Å–µ—Ä—É —Ñ—É–Ω–∫—Ü–∏—è—Å—ã
def has_greeted(user):
    c.execute("SELECT message FROM memory WHERE user = ? AND sender = 'bot' ORDER BY rowid DESC LIMIT 5", (user,))
    last_msgs = [msg[0].lower() for msg in c.fetchall()]
    greetings = ["—Å”ô–ª–µ–º", "”ô–ª–µ—É–º–µ—Ç", "—Å”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ", "“õ–∞–π—ã—Ä–ª—ã"]
    return any(any(greet in msg for greet in greetings) for msg in last_msgs)

# –°–æ“£“ì—ã —Ö–∞–±–∞—Ä–ª–∞–º–∞–ª–∞—Ä–¥—ã –¥–∏–∞–ª–æ–≥ —Ä–µ—Ç—ñ–Ω–¥–µ –∞–ª—É
def get_chat_history(user, limit=50):
    c.execute(
        "SELECT sender, message FROM memory WHERE user = ? ORDER BY rowid DESC LIMIT ?",
        (user, limit)
    )
    rows = reversed(c.fetchall())
    history = "\n".join(
        [f"{'–ö–ª–∏–µ–Ω—Ç' if sender == 'user' else 'u1atsyzbala'}: {msg}" for sender, msg in rows]
    )
    return history

# WhatsApp —Ö–∞–±–∞—Ä–ª–∞–º–∞ –∂—ñ–±–µ—Ä—É —Ñ—É–Ω–∫—Ü–∏—è—Å—ã
# def send_whatsapp_message(to, body):
#     url = f"https://api.twilio.com/2010-04-01/Accounts/{TWILIO_ACCOUNT_SID}/Messages.json"
#     data = {
#         "From": TWILIO_WHATSAPP_NUMBER,
#         "To": to,
#         "Body": body
#     }
#     auth = (TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN)
#     response = requests.post(url, data=data, auth=auth)
#     if response.status_code != 201:
#         print("‚ùå WhatsApp –∂—ñ–±–µ—Ä—É “õ–∞—Ç–µ—Å—ñ:", response.status_code, response.text)
#     else:
#         print("‚úÖ WhatsApp —Ö–∞–±–∞—Ä–ª–∞–º–∞ –∂—ñ–±–µ—Ä—ñ–ª–¥—ñ!")

@app.route("/webhook", methods=["POST"])
def webhook():
    try:
        # send_whatsapp_message("whatsapp:+77762760546", "–¢–µ—Å—Ç –Ω–∞ –º–æ–π –Ω–æ–º–µ—Ä")
        incoming_msg = request.form.get("Body")
        from_number = request.form.get("From")

        print("üì© –•–∞–±–∞—Ä–ª–∞–º–∞:", incoming_msg)
        print("üì± –ö—ñ–º–Ω–µ–Ω:", from_number)

        if not incoming_msg or not from_number:
            print("‚ö†Ô∏è –•–∞–±–∞—Ä–ª–∞–º–∞ –Ω–µ–º–µ—Å–µ –Ω–æ–º–µ—Ä –±–æ—Å!")
            return "Missing message or sender", 10000

        # –ß–∞—Ç —Ç–∞—Ä–∏—Ö—ã–Ω —Ç–∞–∑–∞–ª–∞—É –∫–æ–º–∞–Ω–¥–∞—Å—ã
        if incoming_msg.strip().lower() == "!—Ç–∞–∑–∞–ª–∞—É":
            c.execute("DELETE FROM memory WHERE user = ?", (from_number,))
            conn.commit()
            send_whatsapp_message(from_number, "‚úÖ –ß–∞—Ç —Ç–∞—Ä–∏—Ö—ã —Å”ô—Ç—Ç—ñ —Ç–∞–∑–∞–ª–∞–Ω–¥—ã!")
            return str(MessagingResponse())

        # –ï–≥–µ—Ä ”ô–ª—ñ –∞–º–∞–Ω–¥–∞—Å–ø–∞“ì–∞–Ω –±–æ–ª—Å–∞ ‚Äî –∞–º–∞–Ω–¥–∞—Å—É
        if not has_greeted(from_number):
            greeting = "–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ! Rakurs Production —Ñ–æ—Ç–æ—Å—Ç—É–¥–∏—è—Å—ã–Ω–∞ —Ö–∞–±–∞—Ä–ª–∞—Å“õ–∞–Ω—ã“£—ã–∑“ì–∞ —Ä–∞—Ö–º–µ—Ç. –ë—ñ–∑ —Å—ñ–∑–≥–µ –º—ñ–Ω–¥–µ—Ç—Ç—ñ —Ç“Ø—Ä–¥–µ –∂–∞—É–∞–ø –±–µ—Ä–µ–º—ñ–∑.üòä"
            send_whatsapp_message(from_number, greeting)
            c.execute("INSERT INTO memory (user, sender, message) VALUES (?, ?, ?)", (from_number, 'bot', greeting))
            conn.commit()
            return str(MessagingResponse())

        # –î–∏–∞–ª–æ–≥—Ç—ã –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–µ—Ç—ñ–Ω–¥–µ –¥–∞–π—ã–Ω–¥–∞—É
        history = get_chat_history(from_number)
        prompt = f"""
–°–µ–Ω ‚Äî "Rakurs Production" —Ñ–æ—Ç–æ—Å—Ç—É–¥–∏—è—Å—ã–Ω—ã“£ –∂—ã–ª—ã –∂“Ø–∑–¥—ñ, —Å–∞—Ç—É —Ñ–æ–∫—É—Å—ã–Ω–¥–∞“ì—ã –∫”ô—Å—ñ–±–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—Å—ñ“£. "Love Story" –≤–∏–¥–µ–æ —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—è–ª–∞—Ä—ã–Ω —Å–∞—Ç—É–º–µ–Ω –∞–π–Ω–∞–ª—ã—Å–∞—Å—ã“£. –ö–ª–∏–µ–Ω—Ç–ø–µ–Ω WhatsApp –∞—Ä“õ—ã–ª—ã —Å”©–π–ª–µ—Å—ñ–ø –æ—Ç—ã—Ä—Å—ã“£. –ú—ñ–Ω–¥–µ—Ç—ñ“£ ‚Äì –∫–ª–∏–µ–Ω—Ç–∫–µ –Ω–∞“õ—Ç—ã –∞“õ–ø–∞—Ä–∞—Ç –±–µ—Ä—ñ–ø, –æ–ª–∞—Ä–¥—ã —Å–∞—Ç—ã–ø –∞–ª—É“ì–∞ –º”ô–∂–±“Ø—Ä–ª–µ—É.

–°—Ç—É–¥–∏—è —Ç—É—Ä–∞–ª—ã –Ω–∞“õ—Ç—ã –∞“õ–ø–∞—Ä–∞—Ç:
- –û—Ä–Ω–∞–ª–∞—Å“õ–∞–Ω –∂–µ—Ä—ñ: –ê–∫—Ç”©–±–µ, –°–º–∞–≥—É–ª–æ–≤–∞ 9 –º–µ–∫–µ–Ω-–∂–∞–π—ã–Ω–¥–∞ –æ—Ä–Ω–∞–ª–∞—Å–∫–∞–Ω
- –ë–∞“ì–∞–ª–∞—Ä—ã: Love Story —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—è—Å—ã 40 000 —Ç–µ“£–≥–µ–¥–µ–Ω –±–∞—Å—Ç–∞–ª–∞–¥—ã
- –°—Ç—É–¥–∏—è —ñ—à—ñ–Ω–¥–µ –∫”ô—Å—ñ–±–∏ –∂–∞—Ä—ã“õ –ø–µ–Ω –∑–∞–º–∞–Ω–∞—É–∏ —Ñ–æ—Ç–æ–∞–ø–ø–∞—Ä–∞—Ç—Ç–∞—Ä –±–∞—Ä
- “ö—ã–∑–º–µ—Ç—Ç–µ—Ä: Love Story —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—è—Å—ã, –º–µ—Ä–µ–π—Ç–æ–π–ª–∞—Ä, –æ—Ç–±–∞—Å—ã —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—è–ª–∞—Ä—ã

–¢–∞–ª–∞–ø—Ç–∞—Ä:
- –ê–º–∞–Ω–¥–∞—Å“õ–∞–Ω–¥–∞ —Ç–µ–∫ –±—ñ—Ä —Ä–µ—Ç —Å”ô–ª–µ–º–¥–µ—Å (–µ–≥–µ—Ä –±“±—Ä—ã–Ω –∞–º–∞–Ω–¥–∞—Å–ø–∞“ì–∞–Ω –±–æ–ª—Å–∞), –∂”ô–Ω–µ –æ—Å—ã —Ç–µ–∫—Å—Ç –ø–µ–Ω –∞–º–∞–Ω–¥–∞—Å "–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ! Rakurs Production —Ñ–æ—Ç–æ—Å—Ç—É–¥–∏—è—Å—ã–Ω–∞ —Ö–∞–±–∞—Ä–ª–∞—Å“õ–∞–Ω—ã“£—ã–∑“ì–∞ —Ä–∞—Ö–º–µ—Ç. –ë—ñ–∑ —Å—ñ–∑–≥–µ –º—ñ–Ω–¥–µ—Ç—Ç—ñ —Ç“Ø—Ä–¥–µ –∂–∞—É–∞–ø –±–µ—Ä–µ–º—ñ–∑.üòä".
- “ö–∞–π—Ç–∞–ª–∞–Ω–±–∞. –ö–ª–∏–µ–Ω—Ç –Ω–µ —Å“±—Ä–∞–ø —Ç“±—Ä ‚Äî —Å–æ“ì–∞–Ω –Ω–∞“õ—Ç—ã –∂–∞—É–∞–ø –±–µ—Ä.
- –ï–≥–µ—Ä –±–∞“ì–∞, –ª–æ–∫–∞—Ü–∏—è, —É–∞“õ—ã—Ç —Ç—É—Ä–∞–ª—ã —Å“±—Ä–∞—Å–∞ ‚Äî –Ω–∞“õ—Ç—ã–ª–∞–ø –∞–π—Ç.
- “ö—ã–∑–º–µ—Ç—ñ–º—ñ–∑ —Ç—É—Ä–∞–ª—ã “õ—ã—Å“õ–∞—à–∞, –±—ñ—Ä–∞“õ “õ—ã–∑—ã“õ—Ç—ã –µ—Ç—ñ–ø —Ç“Ø—Å—ñ–Ω–¥—ñ—Ä.

–¢”©–º–µ–Ω–¥–µ –∫–ª–∏–µ–Ω—Ç–ø–µ–Ω –Ω–∞“õ—Ç—ã –¥–∏–∞–ª–æ–≥:
{history}
–ö–ª–∏–µ–Ω—Ç: {incoming_msg}
RakursBot:
"""

        # –ù–∏–µ—Ç—Ç—ñ –∞–Ω—ã“õ—Ç–∞—É
        intent = detect_intent(incoming_msg)

        # GPT –∂–∞—É–∞–ø –∞–ª—É
        response = client.chat.completions.create(
            model="gpt-4",
            messages=[{"role": "user", "content": prompt}],
            max_tokens=2000,
            temperature=0.4,
        )
        reply = response.choices[0].message.content.strip()

        # –ï–≥–µ—Ä –º–µ–∫–µ–Ω –∂–∞–π —Ç—É—Ä–∞–ª—ã —Å“±—Ä–∞“õ –±–æ–ª—Å–∞, —Å—ñ–ª—Ç–µ–º–µ–Ω—ñ “õ–æ—Å—É
        address_keywords = ["–∞–¥—Ä–µ—Å", "–º–µ–∫–µ–Ω-–∂–∞–π", "–æ—Ä–Ω–∞–ª–∞—Å“õ–∞–Ω –∂–µ—Ä", "“õ–∞–π–¥–∞ –æ—Ä–Ω–∞–ª–∞—Å“õ–∞–Ω", "–æ—Ä–Ω–∞–ª–∞—Å“õ–∞–Ω"]
        if any(word in incoming_msg.lower() for word in address_keywords):
            gis_link = "https://2gis.kz/almaty/firm/1234567890"  # ”®–∑ —Å—ñ–ª—Ç–µ–º–µ“£—ñ–∑–¥—ñ “õ–æ–π—ã“£—ã–∑
            if gis_link not in reply:
                reply += f"\n\nüìç –¢–æ–ª—ã“ì—ã—Ä–∞“õ –º–µ–∫–µ–Ω-–∂–∞–π –º–µ–Ω –∫–∞—Ä—Ç–∞ “Ø—à—ñ–Ω: {gis_link}"

        # –ï–≥–µ—Ä –Ω–∏–µ—Ç - –∂–∞–∑—ã–ª—É –±–æ–ª—Å–∞, “õ–æ—Å—ã–º—à–∞ —Ö–∞–±–∞—Ä–ª–∞–º–∞ –∂—ñ–±–µ—Ä—É
        if intent == "booking":
            try:
                print("üî• –ë—Ä–æ–Ω—å –∏–Ω—Ç–µ–Ω—Ç—ã –∞–Ω—ã“õ—Ç–∞–ª–¥—ã!")
                
                # 1. –ö–ª–∏–µ–Ω—Ç–∫–µ —Ä–∞—Å—Ç–∞—É —Ö–∞–±–∞—Ä–ª–∞–º–∞—Å—ã
                booking_reply = "–ñ–∞“õ—Å—ã, —Å—ñ–∑–¥—ñ –∂–∞–∑—ã–ø “õ–æ—è–º—ã–Ω! –°—ñ–∑–≥–µ “õ–∞–Ω–¥–∞–π –∫“Ø–Ω –º–µ–Ω —Å–∞“ì–∞—Ç —ã“£“ì–∞–π–ª—ã –±–æ–ª–∞—Ä –µ–∫–µ–Ω—ñ–Ω –∞–π—Ç—ã“£—ã–∑—à—ã?"
                send_whatsapp_message(from_number, booking_reply)
                
                # 2. –ñ–∞–¥—ã“ì–∞ —Å–∞“õ—Ç–∞—É
                c.execute("INSERT INTO memory (user, sender, message) VALUES (?, ?, ?)", 
                        (from_number, 'user', incoming_msg))
                c.execute("INSERT INTO memory (user, sender, message) VALUES (?, ?, ?)", 
                        (from_number, 'bot', booking_reply))
                conn.commit()
                
                # 3. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä“ì–∞ —Ö–∞–±–∞—Ä–ª–∞–º–∞ (—Ç–µ—Å—Ç —Ä–µ–∂–∏–º—ñ–Ω–¥–µ Sandbox-“õ–∞)
                admin_number = ADMIN_WHATSAPP_NUMBER  # –∞–¥–º–∏–Ω –Ω”©–º—ñ—Ä—ñ
                booking_info = f"üî• –ñ–ê“¢–ê –ë–†–û–ù–¨!\n–ù”©–º—ñ—Ä: {from_number}\n–•–∞–±–∞—Ä–ª–∞–º–∞: ¬´{incoming_msg}¬ª"
                send_whatsapp_message(admin_number, booking_info)
                
                print("‚úÖ –ë—Ä–æ–Ω—å —Ä–∞—Å—Ç–∞–ª–¥—ã –∂”ô–Ω–µ —Ö–∞–±–∞—Ä–ª–∞–º–∞–ª–∞—Ä –∂—ñ–±–µ—Ä—ñ–ª–¥—ñ")
                return str(MessagingResponse())
            
            except Exception as e:
                print(f"‚ùå –ë—Ä–æ–Ω—å ”©“£–¥–µ—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ: {str(e)}")
                # “ö–∞—Ç–µ –±–æ–ª“ì–∞–Ω –∂–∞“ì–¥–∞–π–¥–∞ –∫”ô–¥—ñ–º–≥—ñ –∂–∞–ª“ì–∞—Å—Ç—ã—Ä—É

        # GPT –∂–∞—É–∞–ø“õ–∞ “õ–æ—Å—ã–º—à–∞ —Å“±—Ä–∞“õ “õ–æ—é (–º—ã—Å–∞–ª—ã, –∫–ª–∞—Å—Å–∏–∫–∞–ª—ã“õ –ø–∞, —Å—Ü–µ–Ω–∞—Ä–∏–π –±–æ–π—ã–Ω—à–∞ –º–∞?)
        if not has_greeted(from_number):
            reply += "\n\nüòä –°—ñ–∑–≥–µ “õ–∞–Ω–¥–∞–π Love Story “õ—ã–∑—ã“õ—Ç—ã? –ö–ª–∞—Å—Å–∏–∫–∞–ª—ã“õ –ø–∞, ”ô–ª–¥–µ —Å—Ü–µ–Ω–∞—Ä–∏–π –±–æ–π—ã–Ω—à–∞ –º–∞?"

        print("ü§ñ GPT –∂–∞—É–∞–ø:", reply)
        send_whatsapp_message(from_number, reply)

        # –ñ–∞–¥—ã“ì–∞ —Å–∞“õ—Ç–∞—É
        c.execute("INSERT INTO memory (user, sender, message) VALUES (?, ?, ?)", (from_number, 'user', incoming_msg))
        c.execute("INSERT INTO memory (user, sender, message) VALUES (?, ?, ?)", (from_number, 'bot', reply))
        conn.commit()

        resp = MessagingResponse()
        return str(resp)

    except Exception as e:
        print("‚ùå “ö–ê–¢–ï:", e)
        return str(e), 100000


if __name__ == "__main__":
    app.run(debug=True)
